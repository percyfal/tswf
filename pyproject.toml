[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm>=6.4"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/tswf/_version.py"

[project]
name = "tswf"
description = "Tree sequence workflow"
readme = "README.md"
keywords = ["bioinformatics"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]
dependencies = [
    'click>=8.0',
    'cyvcf2',
    'importlib-metadata; python_version>="3.7"',
    'jinja2',
    'jsonschema',
    'numpy',
    'pandas',
    'pypandoc',
    'ruamel.yaml',
    'tsinfer'
]
dynamic = ["version"]

[tool.setuptools.dynamic]
version = {attr = "tswf.__version__"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools]
package-data = { tswf = [
            "workflow/Snakefile",
            "workflow/envs/*",
            "workflow/rules/*",
            "workflow/schemas/*",
            "templates/*.j2",
            "config/*",
            "resources/*",
            "test_wf/*",
            "*.json"
]}


[project.scripts]
tswf = "tswf.cli:cli"
tswf-tsinfer = "tswf.tools.tsinfer:main"
tswf-tsinfer-gnn = "tswf.tools.tsinfer_gnn:main"
tswf-tsinfer-make-samples = "tswf.tools.tsinfer_make_samples:main"
tswf-tsinfer-eda = "tswf.tools.viz.tsinfer_eda:main"
tswf-tsinfer-haplotype-gnn = "tswf.tools.tsinfer_haplotype_gnn:main"
tswf-get-ancestral-allele = "tswf.tools.get_ancestral_allele:main"
tswf-make-ancestral-sequence = "tswf.tools.make_ancestral_sequence:main"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --doctest-modules"
pythonpath = [
    "src"
]
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39
isolated_build = true

[testenv]
changedir = tests
deps =
    pytest
    pytest-cov
    pip>=7.0.0
    snakemake
    wheel
commands =
    pytest --basetemp="{envtmpdir}" {posargs}
"""

[tool.snakefmt]
line_length = 90
include = '\.smk$|^Snakefile|\.py$'

# snakefmt passes these options on to black
[tool.black]
skip_string_normalization = true
